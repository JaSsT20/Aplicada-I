// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BlazorApp.Migrations
{
    [DbContext(typeof(Context))]
    partial class ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.2");

            modelBuilder.Entity("Loans", b =>
                {
                    b.Property<int>("loanID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<float>("amount")
                        .HasColumnType("REAL");

                    b.Property<float>("balance")
                        .HasColumnType("REAL");

                    b.Property<string>("concept")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("date")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("expires")
                        .HasColumnType("TEXT");

                    b.Property<int>("personID")
                        .HasColumnType("INTEGER");

                    b.HasKey("loanID");

                    b.ToTable("Loans");
                });

            modelBuilder.Entity("Ocupations", b =>
                {
                    b.Property<int>("OcupationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<float>("Salary")
                        .HasColumnType("REAL");

                    b.HasKey("OcupationId");

                    b.ToTable("Ocupations");
                });

            modelBuilder.Entity("Payments", b =>
                {
                    b.Property<int>("paymentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("PaymentsDetailId")
                        .HasColumnType("INTEGER");

                    b.Property<float>("amount")
                        .HasColumnType("REAL");

                    b.Property<string>("concept")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("date")
                        .HasColumnType("TEXT");

                    b.Property<int>("personID")
                        .HasColumnType("INTEGER");

                    b.HasKey("paymentID");

                    b.HasIndex("PaymentsDetailId");

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("PaymentsDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<float>("AmountPaid")
                        .HasColumnType("REAL");

                    b.Property<int>("LoanID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PaymentID")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("PaymentsDetail");
                });

            modelBuilder.Entity("Person", b =>
                {
                    b.Property<int>("personID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<float>("balance")
                        .HasColumnType("REAL");

                    b.Property<string>("cellphoneNumber")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("dateBirth")
                        .HasColumnType("TEXT");

                    b.Property<string>("direction")
                        .HasColumnType("TEXT");

                    b.Property<string>("email")
                        .HasColumnType("TEXT");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("occupationID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("phoneNumber")
                        .HasColumnType("TEXT");

                    b.HasKey("personID");

                    b.ToTable("Person");
                });

            modelBuilder.Entity("Payments", b =>
                {
                    b.HasOne("PaymentsDetail", "PaymentsDetail")
                        .WithMany()
                        .HasForeignKey("PaymentsDetailId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PaymentsDetail");
                });
#pragma warning restore 612, 618
        }
    }
}
